{
  "openapi": "3.0.0",
  "info": {
    "title": "Customer API",
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://sandbox-api.fedapay.com/v1"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/transactions/{id}": {
      "get": {
        "summary": "Get a transaction",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Transaction ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Transaction ID."
                    },
                    "reference": {
                      "type": "string",
                      "description": "Transaction reference."
                    },
                    "amount": {
                      "type": "integer",
                      "description": "Transaction amount."
                    },
                    "description": {
                      "type": "string",
                      "description": "Transaction description."
                    },
                    "callback_url": {
                      "type": "string",
                      "description": "Transaction callback URL."
                    },
                    "status": {
                      "type": "string",
                      "description": "Transaction status (e.g., 'pending', 'approved', 'canceled')."
                    },
                    "customer_id": {
                      "type": "integer",
                      "description": "Customer ID associated with the transaction."
                    },
                    "currency_id": {
                      "type": "integer",
                      "description": "Currency ID associated with the transaction."
                    },
                    "mode": {
                      "type": "string",
                      "description": "Transaction mode."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata related to the transaction."
                    },
                    "commission": {
                      "type": "integer",
                      "description": "Transaction commission."
                    },
                    "fees": {
                      "type": "integer",
                      "description": "Transaction fees."
                    },
                    "fixed_commission": {
                      "type": "integer",
                      "description": "Fixed commission applied to the transaction."
                    },
                    "amount_transferred": {
                      "type": "integer",
                      "description": "Amount transferred to the beneficiary."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction creation."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of last transaction update."
                    },
                    "approved_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction approval."
                    },
                    "canceled_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction cancellation."
                    },
                    "declined_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction decline."
                    },
                    "refunded_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction refund."
                    },
                    "transferred_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction transfer."
                    },
                    "deleted_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction deletion."
                    },
                    "last_error_code": {
                      "type": "string",
                      "description": "Last error code encountered during the transaction."
                    },
                    "custom_metadata": {
                      "type": "object",
                      "description": "Custom metadata associated with the transaction."
                    },
                    "amount_debited": {
                      "type": "integer",
                      "description": "Amount debited from the payer."
                    },
                    "receipt_url": {
                      "type": "string",
                      "format": "url",
                      "description": "URL to the transaction receipt."
                    },
                    "payment_method_id": {
                      "type": "integer",
                      "description": "Payment method ID used for the transaction."
                    },
                    "sub_accounts_commissions": {
                      "type": "array",
                      "description": "Commissions applied to sub-accounts."
                    },
                    "transaction_key": {
                      "type": "string",
                      "description": "Unique key associated with the transaction."
                    },
                    "merchant_reference": {
                      "type": "string",
                      "description": "Merchant reference provided for the transaction."
                    },
                    "account_id": {
                      "type": "integer",
                      "description": "Account ID associated with the transaction."
                    },
                    "balance_id": {
                      "type": "integer",
                      "description": "Balance ID associated with the transaction."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found."
          }
        },
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "label": "Node",
            "source": "const { FedaPay, Transaction } = require('fedapay');\n/* Replace YOUR_SECRETE_API_KEY with your real API key */\nFedaPay.setApiKey(\"YOUR_SECRETE_API_KEY\");\n/* Specify whether you want to run your query in test mode or live mode */\nFedaPay.setEnvironment('sandbox'); //or setEnvironment('live');\n/* Show customers */\nconst transaction = await Transaction.retrieve(ID, params = {}, headers = {});"
          },
          {
            "lang": "PHP",
            "source": "\\FedaPay\\Fedapay::setApiKey(MY_API_KEY);\n$customer = \\FedaPay\\Transaction::retrieve(ID, params = {}, header = {});"
          },
          {
            "lang": "Ruby",
            "source": "require 'fedapay';\n# configure FedaPay library\nFedaPay.api_key = '' # Your secret api key\nFedaPay.environment = '' # sandbox or live\ntransactions = FedaPay::Transaction.retrieve(ID);"
          }
        ]
      },
      "put": {
        "summary": "Update a transaction",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Transaction ID."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description of the transaction."
                  },
                  "amount": {
                    "type": "integer",
                    "description": "Amount of the transaction."
                  },
                  "callback_url": {
                    "type": "string",
                    "description": "URL to receive transaction updates.",
                    "format": "url"
                  },
                  "status": {
                    "type": "string",
                    "description": "Transaction status (e.g., 'pending', 'approved', 'canceled')."
                  },
                  "mode": {
                    "type": "string",
                    "description": "Transaction mode (e.g., 'standard', 'mobile_money')."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Transaction ID."
                    },
                    "reference": {
                      "type": "string",
                      "description": "Transaction reference."
                    },
                    "amount": {
                      "type": "integer",
                      "description": "Transaction amount."
                    },
                    "description": {
                      "type": "string",
                      "description": "Transaction description."
                    },
                    "callback_url": {
                      "type": "string",
                      "description": "Transaction callback URL."
                    },
                    "status": {
                      "type": "string",
                      "description": "Transaction status (e.g., 'pending', 'approved', 'canceled')."
                    },
                    "customer_id": {
                      "type": "integer",
                      "description": "Customer ID associated with the transaction."
                    },
                    "currency_id": {
                      "type": "integer",
                      "description": "Currency ID associated with the transaction."
                    },
                    "mode": {
                      "type": "string",
                      "description": "Transaction mode."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Additional metadata related to the transaction."
                    },
                    "commission": {
                      "type": "integer",
                      "description": "Transaction commission."
                    },
                    "fees": {
                      "type": "integer",
                      "description": "Transaction fees."
                    },
                    "fixed_commission": {
                      "type": "integer",
                      "description": "Fixed commission applied to the transaction."
                    },
                    "amount_transferred": {
                      "type": "integer",
                      "description": "Amount transferred to the beneficiary."
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction creation."
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of last transaction update."
                    },
                    "approved_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction approval."
                    },
                    "canceled_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction cancellation."
                    },
                    "declined_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction decline."
                    },
                    "refunded_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction refund."
                    },
                    "transferred_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction transfer."
                    },
                    "deleted_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of transaction deletion."
                    },
                    "last_error_code": {
                      "type": "string",
                      "description": "Last error code encountered during the transaction."
                    },
                    "custom_metadata": {
                      "type": "object",
                      "description": "Custom metadata associated with the transaction."
                    },
                    "amount_debited": {
                      "type": "integer",
                      "description": "Amount debited from the payer."
                    },
                    "receipt_url": {
                      "type": "string",
                      "format": "url",
                      "description": "URL to the transaction receipt."
                    },
                    "payment_method_id": {
                      "type": "integer",
                      "description": "Payment method ID used for the transaction."
                    },
                    "sub_accounts_commissions": {
                      "type": "array",
                      "description": "Commissions applied to sub-accounts."
                    },
                    "transaction_key": {
                      "type": "string",
                      "description": "Unique key associated with the transaction."
                    },
                    "merchant_reference": {
                      "type": "string",
                      "description": "Merchant reference provided for the transaction."
                    },
                    "account_id": {
                      "type": "integer",
                      "description": "Account ID associated with the transaction."
                    },
                    "balance_id": {
                      "type": "integer",
                      "description": "Balance ID associated with the transaction."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body."
          },
          "404": {
            "description": "Transaction not found."
          }
        },
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "label": "Node",
            "source": "const { FedaPay, Transaction } = require('fedapay');\n/* Replace YOUR_SECRETE_API_KEY with your real API key */\nFedaPay.setApiKey(\"YOUR_SECRETE_API_KEY\");\n/* Specify whether you want to run your query in test mode or live mode */\nFedaPay.setEnvironment('sandbox'); //or setEnvironment('live');\n/* Update a transaction */\nconst transaction = await Transaction.update(ID, params = {}, headers = {});"
          },
          {
            "lang": "PHP",
            "source": "\\FedaPay\\Fedapay::setApiKey(MY_API_KEY);\n\\FedaPay\\Transaction::update(ID, params = {}, headers = {});"
          },
          {
            "lang": "Ruby",
            "source": "require 'fedapay';\n# configure FedaPay library\nFedaPay.api_key = '' # Your secret api key\nFedaPay.environment = '' # sandbox or live\n# Update a transaction instance\ntransaction.amount = 5000;\ntransaction.save;\n# Or\ntransaction.save amount: 5000;\n# Update a transaction by id\nFedaPay::Transaction.update(ID, amount: 5000);"
          }
        ]
      },
      "delete": {
        "summary": "Delete a transaction",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Transaction ID."
          }
        ],
        "responses": {
          "204": {
            "description": "Transaction deleted successfully."
          },
          "404": {
            "description": "Transaction not found."
          }
        },
        "x-codeSamples": [
          {
            "lang": "JavaScript",
            "label": "Node",
            "source": "const { FedaPay, Transaction } = require('fedapay');\n/* Replace YOUR_SECRETE_API_KEY with your real API key */\nFedaPay.setApiKey(\"YOUR_SECRETE_API_KEY\");\n/* Specify whether you want to run your query in test mode or live mode */\nFedaPay.setEnvironment('sandbox'); //or setEnvironment('live');\n/* Delete transaction */\nconst transaction = await Transaction.delete(ID, params = {}, headers = {});"
          },
          {
            "lang": "PHP",
            "source": "\\FedaPay\\Fedapay::setApiKey(MY_API_KEY);\n\\FedaPay\\Transaction::delete(ID);"
          },
          {
            "lang": "Ruby",
            "source": "require 'fedapay';\n# configure FedaPay library\nFedaPay.api_key = '' # Your secret api key\nFedaPay.environment = '' # sandbox or live\ntransaction.delete;"
          }
        ]
      }
    }
  }
}
